"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/canvas.tsx":
/*!****************************!*\
  !*** ./src/app/canvas.tsx ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ CanvasBackground; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var colord__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! colord */ \"(app-pages-browser)/./node_modules/colord/index.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nfunction CanvasBackground() {\n    _s();\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const holderRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const animator = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const resizeHandler = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        if (canvasRef.current && holderRef.current) {\n            const pixelRatio = window.devicePixelRatio || 1;\n            canvasRef.current.width = holderRef.current.clientWidth * pixelRatio;\n            canvasRef.current.height = holderRef.current.clientHeight * pixelRatio;\n            canvasRef.current.style.width = holderRef.current.clientWidth + \"px\";\n            canvasRef.current.style.height = holderRef.current.clientHeight + \"px\";\n            if (animator.current) {\n                animator.current.unsubscribe();\n            }\n            const newAnimator = new Animator(canvasRef.current, pixelRatio);\n            newAnimator.subscribe();\n            animator.current = newAnimator;\n        }\n    }, []);\n    const mouseMoveHandler = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((ev)=>{\n        if (animator.current) {\n            animator.current.setMousePosition(ev.clientX, ev.clientY);\n        }\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        resizeHandler();\n        window.addEventListener(\"resize\", resizeHandler);\n        window.addEventListener(\"mousemove\", mouseMoveHandler);\n        return ()=>{\n            window.removeEventListener(\"resize\", resizeHandler);\n            window.removeEventListener(\"mousemove\", mouseMoveHandler);\n        };\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: holderRef,\n        style: {\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            display: \"flex\"\n        },\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n            ref: canvasRef\n        }, void 0, false, {\n            fileName: \"/Users/tomasreimers/Desktop/tomasreimers.com/src/app/canvas.tsx\",\n            lineNumber: 56,\n            columnNumber: 5\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/tomasreimers/Desktop/tomasreimers.com/src/app/canvas.tsx\",\n        lineNumber: 48,\n        columnNumber: 10\n    }, this);\n}\n_s(CanvasBackground, \"OuYOB6GquJ0EsLXUrhH1ZUdOHbY=\");\n_c = CanvasBackground;\nconst PERCENT_STARS = 0.0004;\nconst SHOOTING_STARS_PER_SECOND = 1;\nconst STAR_COLORS = [\n    \"#f8fafc\"\n];\nconst BACKGROUND_FADE = 10;\nclass Animator {\n    paintFrame(time) {\n        const context = this.canvas.getContext(\"2d\");\n        const pixelRatio = window.devicePixelRatio || 1;\n        this.computeShootingStars(time);\n        if (context) {\n            // Older versions of safari are missing this\n            if (\"reset\" in context) {\n                context.reset();\n            }\n            context.scale(pixelRatio, pixelRatio);\n            this.paintSky(context, time);\n            this.paintStars(context, time);\n            this.paintShootingStars(context, time);\n            context.resetTransform();\n        }\n        this.lastFrame = time;\n        if (this.subscribed) {\n            this.callback = requestAnimationFrame(this.paintFrame);\n        }\n    }\n    computeShootingStars(time) {\n        const color = STAR_COLORS[Math.floor(Math.random() * STAR_COLORS.length)];\n        this.shootingStars = this.shootingStars.filter((star)=>star.start + star.life * 1000 >= time);\n        const timeSinceLastFrame = (time - this.lastFrame) / 1000;\n        const shouldAddStar = Math.random() > 1 - SHOOTING_STARS_PER_SECOND * timeSinceLastFrame;\n        if (shouldAddStar) {\n            const startX = Math.random() * (this.canvas.width / this.pixelRatio);\n            const startY = Math.random() * (this.canvas.height / this.pixelRatio);\n            const size = 0.25 + Math.random() * 1.25;\n            const angle = Math.random() * Math.PI * 2;\n            const life = 0.5 + Math.random() * 1.5;\n            const velocity = 80 + Math.random() * 80;\n            this.shootingStars.push({\n                startX,\n                startY,\n                size,\n                start: time,\n                life,\n                color,\n                angle,\n                velocity\n            });\n        }\n    }\n    paintSky(ctx, time) {\n        ctx.save();\n        const secondsSinceStart = (time - this.start) / 1000;\n        const opacity = Math.max(0, secondsSinceStart / BACKGROUND_FADE);\n        var gradient = ctx.createLinearGradient(0, 0, 0, this.canvas.height);\n        gradient.addColorStop(0, (0,colord__WEBPACK_IMPORTED_MODULE_2__.colord)(\"#020617\").alpha(opacity).toRgbString());\n        gradient.addColorStop(1, (0,colord__WEBPACK_IMPORTED_MODULE_2__.colord)(\"#0f172a\").alpha(opacity).toRgbString());\n        ctx.rect(0, 0, this.canvas.width / this.pixelRatio, this.canvas.height / this.pixelRatio);\n        ctx.fillStyle = \"#020617\";\n        ctx.fill();\n        ctx.fillStyle = gradient;\n        ctx.fill();\n        ctx.restore();\n    }\n    paintStars(ctx, time) {\n        ctx.save();\n        for(let i = 0; i < this.stars.length; i++){\n            const { x, y, size, distance, brightness: { min: brightnessMin, max: brightnessMax, period: brightnessPeriod, offset: brightnessOffset, initialFade: { duration: initialFadeDuration, offset: initialFadeOffset } } } = this.stars[i];\n            const secondsSinceStart = (time - this.start) / 1000;\n            const initialFadePercent = Math.min(1, Math.max(0, (secondsSinceStart - initialFadeOffset) / initialFadeDuration));\n            const percentDone = secondsSinceStart / brightnessPeriod + brightnessOffset;\n            const brightness = brightnessMin + brightnessMax * ((Math.sin(percentDone * 2 * Math.PI) + 1) / 2);\n            const centerX = this.canvas.width / this.pixelRatio / 2;\n            const centerY = this.canvas.height / this.pixelRatio / 2;\n            const xWithParallax = x + 40 * distance * (this.mouseX - centerX) / centerX;\n            const yWithParallax = y + 40 * distance * (this.mouseY - centerY) / centerY;\n            ctx.beginPath();\n            ctx.arc(x, y, size / 2, 0, 2 * Math.PI);\n            ctx.fillStyle = (0,colord__WEBPACK_IMPORTED_MODULE_2__.colord)(\"#f8fafc\").alpha(brightness * initialFadePercent).toRgbString();\n            ctx.fill();\n        }\n        ctx.restore();\n    }\n    paintShootingStars(ctx, time) {\n        ctx.save();\n        for(let i = 0; i < this.shootingStars.length; i++){\n            const { startX, startY, size, velocity, life, start, angle } = this.shootingStars[i];\n            const x = startX + Math.sin(angle) * velocity * ((time - start) / 1000);\n            const y = startY + Math.cos(angle) * velocity * ((time - start) / 1000);\n            const secondsSinceStart = (time - start) / 1000;\n            const percentDone = secondsSinceStart / life;\n            const brightness = secondsSinceStart > life ? 0 : Math.sin(percentDone * Math.PI);\n            ctx.beginPath();\n            ctx.arc(x, y, size / 2, 0, 2 * Math.PI);\n            ctx.fillStyle = (0,colord__WEBPACK_IMPORTED_MODULE_2__.colord)(\"#f8fafc\").alpha(brightness).toRgbString();\n            ctx.fill();\n        }\n        ctx.restore();\n    }\n    setMousePosition(x, y) {\n        this.mouseX = x;\n        this.mouseY = y;\n    }\n    subscribe() {\n        this.subscribed = true;\n        this.callback = requestAnimationFrame(this.paintFrame);\n    }\n    unsubscribe() {\n        this.subscribed = false;\n        if (this.callback) {\n            cancelAnimationFrame(this.callback);\n        }\n    }\n    constructor(canvas, pixelRatio){\n        this.canvas = canvas;\n        this.pixelRatio = pixelRatio;\n        this.callback = null;\n        this.subscribed = false;\n        this.stars = [];\n        this.shootingStars = [];\n        const numberOfStars = canvas.width / pixelRatio * (canvas.height / pixelRatio) * PERCENT_STARS;\n        for(let i = 0; i < numberOfStars; i++){\n            const x = Math.random() * (canvas.width / pixelRatio);\n            const y = Math.random() * (canvas.height / pixelRatio);\n            const size = 0.25 + Math.random() * 1.25;\n            const distance = Math.random();\n            const brightness1 = Math.random();\n            const brightness2 = Math.random();\n            const period = 10 + Math.random() * 10;\n            const initialFadeDuration = Math.random() * 30;\n            const initialFadeOffset = Math.random() * 30;\n            const offset = Math.random() * 20;\n            const color = STAR_COLORS[Math.floor(Math.random() * STAR_COLORS.length)];\n            this.stars.push({\n                x,\n                y,\n                size,\n                color,\n                distance,\n                brightness: {\n                    min: Math.min(brightness1, brightness2),\n                    max: Math.max(brightness1, brightness2),\n                    period,\n                    offset,\n                    initialFade: {\n                        duration: initialFadeDuration,\n                        offset: initialFadeOffset\n                    }\n                }\n            });\n        }\n        this.start = document.timeline.currentTime || 0;\n        this.lastFrame = this.start;\n        this.mouseX = this.canvas.width / pixelRatio / 2;\n        this.mouseY = this.canvas.height / pixelRatio / 2;\n        this.subscribe = this.subscribe.bind(this);\n        this.unsubscribe = this.unsubscribe.bind(this);\n        this.paintFrame = this.paintFrame.bind(this);\n    }\n}\nvar _c;\n$RefreshReg$(_c, \"CanvasBackground\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/canvas.tsx\n"));

/***/ })

});