"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/canvas.tsx":
/*!****************************!*\
  !*** ./src/app/canvas.tsx ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ CanvasBackground; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var colord__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! colord */ \"(app-pages-browser)/./node_modules/colord/index.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nfunction CanvasBackground() {\n    _s();\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const holderRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const animator = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const resizeHandler = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        if (canvasRef.current && holderRef.current) {\n            const pixelRatio = window.devicePixelRatio || 1;\n            canvasRef.current.width = holderRef.current.clientWidth * pixelRatio;\n            canvasRef.current.height = holderRef.current.clientHeight * pixelRatio;\n            canvasRef.current.style.width = holderRef.current.clientWidth + \"px\";\n            canvasRef.current.style.height = holderRef.current.clientHeight + \"px\";\n            if (animator.current) {\n                animator.current.unsubscribe();\n            }\n            const newAnimator = new Animator(canvasRef.current, pixelRatio);\n            newAnimator.subscribe();\n            animator.current = newAnimator;\n        }\n    }, []);\n    const mouseMoveHandler = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((ev)=>{\n        if (animator.current) {\n            animator.current.setMousePosition(ev.clientX, ev.clientY);\n        }\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        resizeHandler();\n        window.addEventListener(\"resize\", resizeHandler);\n        window.addEventListener(\"mousemove\", mouseMoveHandler);\n        return ()=>{\n            window.removeEventListener(\"resize\", resizeHandler);\n            window.removeEventListener(\"mousemove\", mouseMoveHandler);\n        };\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: holderRef,\n        style: {\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            display: \"flex\"\n        },\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n            ref: canvasRef\n        }, void 0, false, {\n            fileName: \"/Users/tomasreimers/Desktop/tomasreimers.com/src/app/canvas.tsx\",\n            lineNumber: 56,\n            columnNumber: 5\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/tomasreimers/Desktop/tomasreimers.com/src/app/canvas.tsx\",\n        lineNumber: 48,\n        columnNumber: 10\n    }, this);\n}\n_s(CanvasBackground, \"OuYOB6GquJ0EsLXUrhH1ZUdOHbY=\");\n_c = CanvasBackground;\nconst PERCENT_STARS = 0.0004;\nconst SHOOTING_STARS_PER_SECOND = 1;\nconst STAR_COLORS = [\n    \"#f8fafc\"\n];\nconst BACKGROUND_FADE = 10;\nclass Animator {\n    paintFrame(time) {\n        const context = this.canvas.getContext(\"2d\");\n        const pixelRatio = window.devicePixelRatio || 1;\n        this.computeShootingStars(time);\n        if (context) {\n            // Older versions of safari are missing this\n            if (\"reset\" in context) {\n                context.reset();\n            }\n            context.scale(pixelRatio, pixelRatio);\n            this.paintSky(context, time);\n            this.paintStars(context, time);\n            this.paintShootingStars(context, time);\n            context.resetTransform();\n        }\n        this.lastFrame = time;\n        if (this.subscribed) {\n            this.callback = requestAnimationFrame(this.paintFrame);\n        }\n    }\n    computeShootingStars(time) {\n        const color = STAR_COLORS[Math.floor(Math.random() * STAR_COLORS.length)];\n        this.shootingStars = this.shootingStars.filter((star)=>star.start + star.life * 1000 >= time);\n        const timeSinceLastFrame = (time - this.lastFrame) / 1000;\n        const shouldAddStar = Math.random() > 1 - SHOOTING_STARS_PER_SECOND * timeSinceLastFrame;\n        if (shouldAddStar) {\n            const startX = Math.random() * (this.canvas.width / this.pixelRatio);\n            const startY = Math.random() * (this.canvas.height / this.pixelRatio);\n            const size = 0.25 + Math.random() * 1.25;\n            const angle = Math.random() * Math.PI * 2;\n            const life = 0.5 + Math.random() * 1.5;\n            const velocity = 80 + Math.random() * 80;\n            this.shootingStars.push({\n                startX,\n                startY,\n                size,\n                start: time,\n                life,\n                color,\n                angle,\n                velocity\n            });\n        }\n    }\n    paintSky(ctx, time) {\n        ctx.save();\n        const secondsSinceStart = (time - this.start) / 1000;\n        const opacity = Math.max(0, secondsSinceStart / BACKGROUND_FADE);\n        var gradient = ctx.createLinearGradient(0, 0, 0, this.canvas.height);\n        gradient.addColorStop(0, (0,colord__WEBPACK_IMPORTED_MODULE_2__.colord)(\"#020617\").alpha(opacity).toRgbString());\n        gradient.addColorStop(1, (0,colord__WEBPACK_IMPORTED_MODULE_2__.colord)(\"#0f172a\").alpha(opacity).toRgbString());\n        ctx.rect(0, 0, this.canvas.width / this.pixelRatio, this.canvas.height / this.pixelRatio);\n        ctx.fillStyle = \"#020617\";\n        ctx.fill();\n        ctx.fillStyle = gradient;\n        ctx.fill();\n        ctx.restore();\n    }\n    paintStars(ctx, time) {\n        ctx.save();\n        for(let i = 0; i < this.stars.length; i++){\n            const { x, y, size, distance, brightness: { min: brightnessMin, max: brightnessMax, period: brightnessPeriod, offset: brightnessOffset, initialFade: { duration: initialFadeDuration, offset: initialFadeOffset } } } = this.stars[i];\n            const secondsSinceStart = (time - this.start) / 1000;\n            const initialFadePercent = Math.min(1, Math.max(0, (secondsSinceStart - initialFadeOffset) / initialFadeDuration));\n            const percentDone = secondsSinceStart / brightnessPeriod + brightnessOffset;\n            const brightness = brightnessMin + brightnessMax * ((Math.sin(percentDone * 2 * Math.PI) + 1) / 2);\n            const centerX = this.canvas.width / this.pixelRatio / 2;\n            const centerY = this.canvas.height / this.pixelRatio / 2;\n            const xWithParallax = x + 40 * distance * (this.mouseX - centerX) / centerX;\n            const yWithParallax = y + 40 * distance * (this.mouseY - centerY) / centerY;\n            ctx.beginPath();\n            ctx.arc(x, y, size / 2, 0, 2 * Math.PI);\n            ctx.fillStyle = (0,colord__WEBPACK_IMPORTED_MODULE_2__.colord)(\"#f8fafc\").alpha(brightness * initialFadePercent).toRgbString();\n            ctx.fill();\n        }\n        ctx.restore();\n    }\n    paintShootingStars(ctx, time) {\n        ctx.save();\n        for(let i = 0; i < this.shootingStars.length; i++){\n            const { startX, startY, size, velocity, life, start, angle } = this.shootingStars[i];\n            const x = startX + Math.sin(angle) * velocity * ((time - start) / 1000);\n            const y = startY + Math.cos(angle) * velocity * ((time - start) / 1000);\n            const secondsSinceStart = (time - start) / 1000;\n            const percentDone = secondsSinceStart / life;\n            const brightness = secondsSinceStart > life ? 0 : Math.sin(percentDone * Math.PI);\n            ctx.beginPath();\n            ctx.arc(x, y, size / 2, 0, 2 * Math.PI);\n            ctx.fillStyle = (0,colord__WEBPACK_IMPORTED_MODULE_2__.colord)(\"#f8fafc\").alpha(brightness).toRgbString();\n            ctx.fill();\n        }\n        ctx.restore();\n    }\n    setMousePosition(x, y) {\n        this.mouseX = x;\n        this.mouseY = y;\n        console.log(\"HI\");\n    }\n    subscribe() {\n        this.subscribed = true;\n        this.callback = requestAnimationFrame(this.paintFrame);\n    }\n    unsubscribe() {\n        this.subscribed = false;\n        if (this.callback) {\n            cancelAnimationFrame(this.callback);\n        }\n    }\n    constructor(canvas, pixelRatio){\n        this.canvas = canvas;\n        this.pixelRatio = pixelRatio;\n        this.callback = null;\n        this.subscribed = false;\n        this.stars = [];\n        this.shootingStars = [];\n        const numberOfStars = canvas.width / pixelRatio * (canvas.height / pixelRatio) * PERCENT_STARS;\n        for(let i = 0; i < numberOfStars; i++){\n            const x = Math.random() * (canvas.width / pixelRatio);\n            const y = Math.random() * (canvas.height / pixelRatio);\n            const size = 0.25 + Math.random() * 1.25;\n            const distance = Math.random();\n            const brightness1 = Math.random();\n            const brightness2 = Math.random();\n            const period = 10 + Math.random() * 10;\n            const initialFadeDuration = Math.random() * 30;\n            const initialFadeOffset = Math.random() * 30;\n            const offset = Math.random() * 20;\n            const color = STAR_COLORS[Math.floor(Math.random() * STAR_COLORS.length)];\n            this.stars.push({\n                x,\n                y,\n                size,\n                color,\n                distance,\n                brightness: {\n                    min: Math.min(brightness1, brightness2),\n                    max: Math.max(brightness1, brightness2),\n                    period,\n                    offset,\n                    initialFade: {\n                        duration: initialFadeDuration,\n                        offset: initialFadeOffset\n                    }\n                }\n            });\n        }\n        this.start = document.timeline.currentTime || 0;\n        this.lastFrame = this.start;\n        this.mouseX = this.canvas.width / pixelRatio / 2;\n        this.mouseY = this.canvas.height / pixelRatio / 2;\n        this.subscribe = this.subscribe.bind(this);\n        this.unsubscribe = this.unsubscribe.bind(this);\n        this.paintFrame = this.paintFrame.bind(this);\n    }\n}\nvar _c;\n$RefreshReg$(_c, \"CanvasBackground\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFDOEIsS0FBSyxDQUFDaEIsSUFBSSxDQUFDO2dCQUNkaUI7Z0JBQ0FDO2dCQUNBdEI7Z0JBQ0FkO2dCQUNBcUM7Z0JBQ0FDLFlBQVk7b0JBQ1ZDLEtBQUt0QyxLQUFLc0MsR0FBRyxDQUFDNEIsYUFBYUM7b0JBQzNCN0MsS0FBS3RCLEtBQUtzQixHQUFHLENBQUM0QyxhQUFhQztvQkFDM0IxQjtvQkFDQUU7b0JBQ0FFLGFBQWE7d0JBQ1hDLFVBQVVDO3dCQUNWSixRQUFRSztvQkFDVjtnQkFDRjtZQUNGO1FBQ0Y7UUFFQSxJQUFJLENBQUN6QyxLQUFLLEdBQUcsU0FBVThELFFBQVEsQ0FBQ0MsV0FBVyxJQUFlO1FBQzFELElBQUksQ0FBQzNFLFNBQVMsR0FBRyxJQUFJLENBQUNZLEtBQUs7UUFFM0IsSUFBSSxDQUFDZ0QsTUFBTSxHQUFHLElBQUksQ0FBQzVFLE1BQU0sQ0FBQ3hCLEtBQUssR0FBR0gsYUFBYTtRQUMvQyxJQUFJLENBQUN5RyxNQUFNLEdBQUcsSUFBSSxDQUFDOUUsTUFBTSxDQUFDdEIsTUFBTSxHQUFHTCxhQUFhO1FBRWhELElBQUksQ0FBQ1csU0FBUyxHQUFHLElBQUksQ0FBQ0EsU0FBUyxDQUFDNEcsSUFBSSxDQUFDLElBQUk7UUFDekMsSUFBSSxDQUFDL0csV0FBVyxHQUFHLElBQUksQ0FBQ0EsV0FBVyxDQUFDK0csSUFBSSxDQUFDLElBQUk7UUFDN0MsSUFBSSxDQUFDdkYsVUFBVSxHQUFHLElBQUksQ0FBQ0EsVUFBVSxDQUFDdUYsSUFBSSxDQUFDLElBQUk7SUFDN0M7QUFvS0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2FwcC9jYW52YXMudHN4PzBiOTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB7IGNvbG9yZCB9IGZyb20gXCJjb2xvcmRcIjtcbmltcG9ydCB7IHVzZUNhbGxiYWNrLCB1c2VFZmZlY3QsIHVzZVJlZiB9IGZyb20gXCJyZWFjdFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDYW52YXNCYWNrZ3JvdW5kKCkge1xuICBjb25zdCBjYW52YXNSZWYgPSB1c2VSZWY8SFRNTENhbnZhc0VsZW1lbnQ+KG51bGwpO1xuICBjb25zdCBob2xkZXJSZWYgPSB1c2VSZWY8SFRNTERpdkVsZW1lbnQ+KG51bGwpO1xuICBjb25zdCBhbmltYXRvciA9IHVzZVJlZjxBbmltYXRvciB8IG51bGw+KG51bGwpO1xuXG4gIGNvbnN0IHJlc2l6ZUhhbmRsZXIgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgaWYgKGNhbnZhc1JlZi5jdXJyZW50ICYmIGhvbGRlclJlZi5jdXJyZW50KSB7XG4gICAgICBjb25zdCBwaXhlbFJhdGlvID0gd2luZG93LmRldmljZVBpeGVsUmF0aW8gfHwgMTtcblxuICAgICAgY2FudmFzUmVmLmN1cnJlbnQud2lkdGggPSBob2xkZXJSZWYuY3VycmVudC5jbGllbnRXaWR0aCAqIHBpeGVsUmF0aW87XG4gICAgICBjYW52YXNSZWYuY3VycmVudC5oZWlnaHQgPSBob2xkZXJSZWYuY3VycmVudC5jbGllbnRIZWlnaHQgKiBwaXhlbFJhdGlvO1xuXG4gICAgICBjYW52YXNSZWYuY3VycmVudC5zdHlsZS53aWR0aCA9IGhvbGRlclJlZi5jdXJyZW50LmNsaWVudFdpZHRoICsgXCJweFwiO1xuICAgICAgY2FudmFzUmVmLmN1cnJlbnQuc3R5bGUuaGVpZ2h0ID0gaG9sZGVyUmVmLmN1cnJlbnQuY2xpZW50SGVpZ2h0ICsgXCJweFwiO1xuXG4gICAgICBpZiAoYW5pbWF0b3IuY3VycmVudCkge1xuICAgICAgICBhbmltYXRvci5jdXJyZW50LnVuc3Vic2NyaWJlKCk7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IG5ld0FuaW1hdG9yID0gbmV3IEFuaW1hdG9yKGNhbnZhc1JlZi5jdXJyZW50LCBwaXhlbFJhdGlvKTtcbiAgICAgIG5ld0FuaW1hdG9yLnN1YnNjcmliZSgpO1xuICAgICAgYW5pbWF0b3IuY3VycmVudCA9IG5ld0FuaW1hdG9yO1xuICAgIH1cbiAgfSwgW10pO1xuXG4gIGNvbnN0IG1vdXNlTW92ZUhhbmRsZXIgPSB1c2VDYWxsYmFjaygoZXY6IE1vdXNlRXZlbnQpID0+IHtcbiAgICBpZiAoYW5pbWF0b3IuY3VycmVudCkge1xuICAgICAgYW5pbWF0b3IuY3VycmVudC5zZXRNb3VzZVBvc2l0aW9uKGV2LmNsaWVudFgsIGV2LmNsaWVudFkpXG4gICAgfVxuICB9LCBbXSlcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHJlc2l6ZUhhbmRsZXIoKTtcblxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwicmVzaXplXCIsIHJlc2l6ZUhhbmRsZXIpO1xuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vtb3ZlXCIsIG1vdXNlTW92ZUhhbmRsZXIpO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLCByZXNpemVIYW5kbGVyKTtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2Vtb3ZlXCIsIG1vdXNlTW92ZUhhbmRsZXIpO1xuICAgIH1cbiAgfSwgW10pO1xuXG4gIHJldHVybiA8ZGl2IHJlZj17aG9sZGVyUmVmfSBzdHlsZT17e1xuICAgIHBvc2l0aW9uOiBcImFic29sdXRlXCIsIFxuICAgIHRvcDogMCxcbiAgICBsZWZ0OiAwLFxuICAgIHJpZ2h0OiAwLFxuICAgIGJvdHRvbTogMCxcbiAgICBkaXNwbGF5OiBcImZsZXhcIlxuICB9fT5cbiAgICA8Y2FudmFzIHJlZj17Y2FudmFzUmVmfSAvPlxuICA8L2Rpdj5cbn1cblxuY29uc3QgUEVSQ0VOVF9TVEFSUyA9IDAuMDAwNDtcbmNvbnN0IFNIT09USU5HX1NUQVJTX1BFUl9TRUNPTkQgPSAxO1xuY29uc3QgU1RBUl9DT0xPUlMgPSBbXG4gICcjZjhmYWZjJyxcbiAgLy8gJyNmZWUyZTInLFxuICAvLyAnI2ZmZWRkNScsXG4gIC8vICcjZmVmM2M3JyxcbiAgLy8gJyNmZWY5YzMnLFxuICAvLyAnI2UwZjJmZSdcbl07XG5jb25zdCBCQUNLR1JPVU5EX0ZBREUgPSAxMDtcblxuY2xhc3MgQW5pbWF0b3Ige1xuICBwcml2YXRlIGNhbGxiYWNrOiBudW1iZXIgfCBudWxsID0gbnVsbDtcbiAgcHJpdmF0ZSBzdWJzY3JpYmVkID0gZmFsc2U7XG4gIHByaXZhdGUgc3RhcnQ6IG51bWJlcjtcbiAgcHJpdmF0ZSBsYXN0RnJhbWU6IG51bWJlcjtcbiAgcHJpdmF0ZSBtb3VzZVg6IG51bWJlcjtcbiAgcHJpdmF0ZSBtb3VzZVk6IG51bWJlcjtcblxuICBwcml2YXRlIHN0YXJzOiB7XG4gICAgeDogbnVtYmVyO1xuICAgIHk6IG51bWJlcjtcbiAgICBzaXplOiBudW1iZXI7XG4gICAgY29sb3I6IHN0cmluZztcbiAgICBkaXN0YW5jZTogbnVtYmVyO1xuICAgIGJyaWdodG5lc3M6IHtcbiAgICAgIG1pbjogbnVtYmVyO1xuICAgICAgbWF4OiBudW1iZXI7XG4gICAgICBwZXJpb2Q6IG51bWJlcjtcbiAgICAgIG9mZnNldDogbnVtYmVyO1xuICAgICAgaW5pdGlhbEZhZGU6IHtcbiAgICAgICAgZHVyYXRpb246IG51bWJlcjtcbiAgICAgICAgb2Zmc2V0OiBudW1iZXI7XG4gICAgICB9O1xuICAgIH1cbiAgfVtdID0gW107XG5cbiAgcHJpdmF0ZSBzaG9vdGluZ1N0YXJzOiB7XG4gICAgc3RhcnQ6IG51bWJlcjtcbiAgICBzdGFydFg6IG51bWJlcjtcbiAgICBzdGFydFk6IG51bWJlcjtcbiAgICBsaWZlOiBudW1iZXI7XG4gICAgYW5nbGU6IG51bWJlcjtcbiAgICBzaXplOiBudW1iZXI7XG4gICAgdmVsb2NpdHk6IG51bWJlcjtcbiAgICBjb2xvcjogc3RyaW5nO1xuICB9W10gPSBbXTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGNhbnZhczogSFRNTENhbnZhc0VsZW1lbnQsIHByaXZhdGUgcGl4ZWxSYXRpbzogbnVtYmVyKSB7XG4gICAgY29uc3QgbnVtYmVyT2ZTdGFycyA9IChjYW52YXMud2lkdGggLyBwaXhlbFJhdGlvKSAqIChjYW52YXMuaGVpZ2h0IC8gcGl4ZWxSYXRpbykgKiBQRVJDRU5UX1NUQVJTO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBudW1iZXJPZlN0YXJzOyBpKyspIHtcbiAgICAgIGNvbnN0IHggPSBNYXRoLnJhbmRvbSgpICogKGNhbnZhcy53aWR0aCAvIHBpeGVsUmF0aW8pO1xuICAgICAgY29uc3QgeSA9IE1hdGgucmFuZG9tKCkgKiAoY2FudmFzLmhlaWdodCAvIHBpeGVsUmF0aW8pO1xuICAgICAgY29uc3Qgc2l6ZSA9IDAuMjUgKyBNYXRoLnJhbmRvbSgpICogMS4yNTtcbiAgICAgIGNvbnN0IGRpc3RhbmNlID0gTWF0aC5yYW5kb20oKTtcbiAgICAgIGNvbnN0IGJyaWdodG5lc3MxID0gTWF0aC5yYW5kb20oKTtcbiAgICAgIGNvbnN0IGJyaWdodG5lc3MyID0gTWF0aC5yYW5kb20oKTtcbiAgICAgIGNvbnN0IHBlcmlvZCA9IDEwICsgTWF0aC5yYW5kb20oKSAqIDEwO1xuICAgICAgY29uc3QgaW5pdGlhbEZhZGVEdXJhdGlvbiA9IE1hdGgucmFuZG9tKCkgKiAzMDtcbiAgICAgIGNvbnN0IGluaXRpYWxGYWRlT2Zmc2V0ID0gTWF0aC5yYW5kb20oKSAqIDMwO1xuICAgICAgY29uc3Qgb2Zmc2V0ID0gTWF0aC5yYW5kb20oKSAqIDIwO1xuICAgICAgY29uc3QgY29sb3IgPSBTVEFSX0NPTE9SU1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBTVEFSX0NPTE9SUy5sZW5ndGgpXTtcblxuICAgICAgdGhpcy5zdGFycy5wdXNoKHtcbiAgICAgICAgeCwgXG4gICAgICAgIHksIFxuICAgICAgICBzaXplLCBcbiAgICAgICAgY29sb3IsXG4gICAgICAgIGRpc3RhbmNlLFxuICAgICAgICBicmlnaHRuZXNzOiB7XG4gICAgICAgICAgbWluOiBNYXRoLm1pbihicmlnaHRuZXNzMSwgYnJpZ2h0bmVzczIpLFxuICAgICAgICAgIG1heDogTWF0aC5tYXgoYnJpZ2h0bmVzczEsIGJyaWdodG5lc3MyKSxcbiAgICAgICAgICBwZXJpb2QsXG4gICAgICAgICAgb2Zmc2V0LFxuICAgICAgICAgIGluaXRpYWxGYWRlOiB7XG4gICAgICAgICAgICBkdXJhdGlvbjogaW5pdGlhbEZhZGVEdXJhdGlvbixcbiAgICAgICAgICAgIG9mZnNldDogaW5pdGlhbEZhZGVPZmZzZXRcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHRoaXMuc3RhcnQgPSAoZG9jdW1lbnQudGltZWxpbmUuY3VycmVudFRpbWUgYXMgbnVtYmVyKSB8fCAwO1xuICAgIHRoaXMubGFzdEZyYW1lID0gdGhpcy5zdGFydDtcblxuICAgIHRoaXMubW91c2VYID0gdGhpcy5jYW52YXMud2lkdGggLyBwaXhlbFJhdGlvIC8gMjtcbiAgICB0aGlzLm1vdXNlWSA9IHRoaXMuY2FudmFzLmhlaWdodCAvIHBpeGVsUmF0aW8gLyAyO1xuXG4gICAgdGhpcy5zdWJzY3JpYmUgPSB0aGlzLnN1YnNjcmliZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMudW5zdWJzY3JpYmUgPSB0aGlzLnVuc3Vic2NyaWJlLmJpbmQodGhpcyk7XG4gICAgdGhpcy5wYWludEZyYW1lID0gdGhpcy5wYWludEZyYW1lLmJpbmQodGhpcyk7XG4gIH1cblxuICBwdWJsaWMgcGFpbnRGcmFtZSh0aW1lOiBET01IaWdoUmVzVGltZVN0YW1wKSB7XG4gICAgY29uc3QgY29udGV4dCA9IHRoaXMuY2FudmFzLmdldENvbnRleHQoXCIyZFwiKTtcbiAgICBjb25zdCBwaXhlbFJhdGlvID0gd2luZG93LmRldmljZVBpeGVsUmF0aW8gfHwgMTtcblxuICAgIHRoaXMuY29tcHV0ZVNob290aW5nU3RhcnModGltZSk7XG5cbiAgICBpZiAoY29udGV4dCkge1xuICAgICAgLy8gT2xkZXIgdmVyc2lvbnMgb2Ygc2FmYXJpIGFyZSBtaXNzaW5nIHRoaXNcbiAgICAgIGlmIChcInJlc2V0XCIgaW4gY29udGV4dCkge1xuICAgICAgICBjb250ZXh0LnJlc2V0KCk7XG4gICAgICB9XG4gIFxuICAgICAgY29udGV4dC5zY2FsZShwaXhlbFJhdGlvLCBwaXhlbFJhdGlvKTtcbiAgICAgIHRoaXMucGFpbnRTa3koY29udGV4dCwgdGltZSk7XG4gICAgICB0aGlzLnBhaW50U3RhcnMoY29udGV4dCwgdGltZSk7XG4gICAgICB0aGlzLnBhaW50U2hvb3RpbmdTdGFycyhjb250ZXh0LCB0aW1lKTtcbiAgICAgIGNvbnRleHQucmVzZXRUcmFuc2Zvcm0oKTtcbiAgICB9XG5cbiAgICB0aGlzLmxhc3RGcmFtZSA9IHRpbWU7XG5cbiAgICBpZiAodGhpcy5zdWJzY3JpYmVkKSB7XG4gICAgICB0aGlzLmNhbGxiYWNrID0gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRoaXMucGFpbnRGcmFtZSk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBjb21wdXRlU2hvb3RpbmdTdGFycyh0aW1lOiBET01IaWdoUmVzVGltZVN0YW1wKSB7XG4gICAgY29uc3QgY29sb3IgPSBTVEFSX0NPTE9SU1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBTVEFSX0NPTE9SUy5sZW5ndGgpXTtcblxuICAgIHRoaXMuc2hvb3RpbmdTdGFycyA9IHRoaXMuc2hvb3RpbmdTdGFycy5maWx0ZXIoc3RhciA9PiBzdGFyLnN0YXJ0ICsgc3Rhci5saWZlICogMTAwMCA+PSB0aW1lKTtcblxuICAgIGNvbnN0IHRpbWVTaW5jZUxhc3RGcmFtZSA9ICh0aW1lIC0gdGhpcy5sYXN0RnJhbWUpIC8gMTAwMDtcblxuICAgIGNvbnN0IHNob3VsZEFkZFN0YXIgPSBNYXRoLnJhbmRvbSgpID4gMSAtIChTSE9PVElOR19TVEFSU19QRVJfU0VDT05EICogdGltZVNpbmNlTGFzdEZyYW1lKTtcbiAgICBpZiAoc2hvdWxkQWRkU3Rhcikge1xuICAgICAgY29uc3Qgc3RhcnRYID0gTWF0aC5yYW5kb20oKSAqICh0aGlzLmNhbnZhcy53aWR0aCAvIHRoaXMucGl4ZWxSYXRpbyk7XG4gICAgICBjb25zdCBzdGFydFkgPSBNYXRoLnJhbmRvbSgpICogKHRoaXMuY2FudmFzLmhlaWdodCAvIHRoaXMucGl4ZWxSYXRpbyk7XG4gICAgICBjb25zdCBzaXplID0gMC4yNSArIE1hdGgucmFuZG9tKCkgKiAxLjI1O1xuICAgICAgY29uc3QgYW5nbGUgPSBNYXRoLnJhbmRvbSgpICogTWF0aC5QSSAqIDI7XG4gICAgICBjb25zdCBsaWZlID0gMC41ICsgTWF0aC5yYW5kb20oKSAqIDEuNTtcbiAgICAgIGNvbnN0IHZlbG9jaXR5ID0gODAgKyBNYXRoLnJhbmRvbSgpICogODA7XG5cbiAgICAgIHRoaXMuc2hvb3RpbmdTdGFycy5wdXNoKHtcbiAgICAgICAgc3RhcnRYLCBcbiAgICAgICAgc3RhcnRZLCBcbiAgICAgICAgc2l6ZSwgXG4gICAgICAgIHN0YXJ0OiB0aW1lLFxuICAgICAgICBsaWZlLCBcbiAgICAgICAgY29sb3IsXG4gICAgICAgIGFuZ2xlLCBcbiAgICAgICAgdmVsb2NpdHlcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgcGFpbnRTa3koY3R4OiBDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQsIHRpbWU6IERPTUhpZ2hSZXNUaW1lU3RhbXApIHtcbiAgICBjdHguc2F2ZSgpO1xuXG4gICAgY29uc3Qgc2Vjb25kc1NpbmNlU3RhcnQgPSAodGltZSAtIHRoaXMuc3RhcnQpIC8gMTAwMDtcbiAgICBjb25zdCBvcGFjaXR5ID0gTWF0aC5tYXgoMCwgc2Vjb25kc1NpbmNlU3RhcnQgLyBCQUNLR1JPVU5EX0ZBREUpO1xuXG4gICAgdmFyIGdyYWRpZW50ID0gY3R4LmNyZWF0ZUxpbmVhckdyYWRpZW50KDAsIDAsIDAsIHRoaXMuY2FudmFzLmhlaWdodCk7XG4gICAgZ3JhZGllbnQuYWRkQ29sb3JTdG9wKDAsIGNvbG9yZChcIiMwMjA2MTdcIikuYWxwaGEob3BhY2l0eSkudG9SZ2JTdHJpbmcoKSk7XG4gICAgZ3JhZGllbnQuYWRkQ29sb3JTdG9wKDEsIGNvbG9yZChcIiMwZjE3MmFcIikuYWxwaGEob3BhY2l0eSkudG9SZ2JTdHJpbmcoKSk7XG4gIFxuICAgIGN0eC5yZWN0KDAsIDAsIHRoaXMuY2FudmFzLndpZHRoIC8gdGhpcy5waXhlbFJhdGlvLCB0aGlzLmNhbnZhcy5oZWlnaHQgLyB0aGlzLnBpeGVsUmF0aW8pO1xuICAgIGN0eC5maWxsU3R5bGUgPSBcIiMwMjA2MTdcIjtcbiAgICBjdHguZmlsbCgpO1xuICAgIGN0eC5maWxsU3R5bGUgPSBncmFkaWVudDtcbiAgICBjdHguZmlsbCgpOyBcbiAgXG4gICAgY3R4LnJlc3RvcmUoKTtcbiAgfVxuXG4gIHByaXZhdGUgcGFpbnRTdGFycyhjdHg6IENhbnZhc1JlbmRlcmluZ0NvbnRleHQyRCwgdGltZTogRE9NSGlnaFJlc1RpbWVTdGFtcCkge1xuICAgIGN0eC5zYXZlKCk7XG4gIFxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5zdGFycy5sZW5ndGg7IGkrKykge1xuICAgICAgY29uc3Qge1xuICAgICAgICB4LCBcbiAgICAgICAgeSwgXG4gICAgICAgIHNpemUsIFxuICAgICAgICBkaXN0YW5jZSxcbiAgICAgICAgYnJpZ2h0bmVzczoge1xuICAgICAgICAgIG1pbjogYnJpZ2h0bmVzc01pbiwgXG4gICAgICAgICAgbWF4OiBicmlnaHRuZXNzTWF4LCBcbiAgICAgICAgICBwZXJpb2Q6IGJyaWdodG5lc3NQZXJpb2QsXG4gICAgICAgICAgb2Zmc2V0OiBicmlnaHRuZXNzT2Zmc2V0LFxuICAgICAgICAgIGluaXRpYWxGYWRlOiB7XG4gICAgICAgICAgICBkdXJhdGlvbjogaW5pdGlhbEZhZGVEdXJhdGlvbixcbiAgICAgICAgICAgIG9mZnNldDogaW5pdGlhbEZhZGVPZmZzZXRcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gPSB0aGlzLnN0YXJzW2ldO1xuICAgICAgXG4gICAgICBjb25zdCBzZWNvbmRzU2luY2VTdGFydCA9ICh0aW1lIC0gdGhpcy5zdGFydCkgLyAxMDAwO1xuICAgICAgY29uc3QgaW5pdGlhbEZhZGVQZXJjZW50ID0gTWF0aC5taW4oMSwgTWF0aC5tYXgoMCwgKHNlY29uZHNTaW5jZVN0YXJ0IC0gaW5pdGlhbEZhZGVPZmZzZXQpIC8gaW5pdGlhbEZhZGVEdXJhdGlvbikpO1xuICAgICAgY29uc3QgcGVyY2VudERvbmUgPSAoc2Vjb25kc1NpbmNlU3RhcnQgLyBicmlnaHRuZXNzUGVyaW9kKSArIGJyaWdodG5lc3NPZmZzZXQ7XG4gICAgICBjb25zdCBicmlnaHRuZXNzID0gYnJpZ2h0bmVzc01pbiArIGJyaWdodG5lc3NNYXggKiAoKE1hdGguc2luKHBlcmNlbnREb25lICogMiAqIE1hdGguUEkpICsgMSkgLyAyKTtcbiAgXG4gICAgICBjb25zdCBjZW50ZXJYID0gKHRoaXMuY2FudmFzLndpZHRoIC8gdGhpcy5waXhlbFJhdGlvIC8gMik7XG4gICAgICBjb25zdCBjZW50ZXJZID0gKHRoaXMuY2FudmFzLmhlaWdodCAvIHRoaXMucGl4ZWxSYXRpbyAvIDIpO1xuXG4gICAgICBjb25zdCB4V2l0aFBhcmFsbGF4ID0geCArIDQwICogZGlzdGFuY2UgKiAodGhpcy5tb3VzZVggLSBjZW50ZXJYKSAvIGNlbnRlclg7XG4gICAgICBjb25zdCB5V2l0aFBhcmFsbGF4ID0geSArIDQwICogZGlzdGFuY2UgKiAodGhpcy5tb3VzZVkgLSBjZW50ZXJZKSAvIGNlbnRlclk7XG5cbiAgICAgIGN0eC5iZWdpblBhdGgoKTtcbiAgICAgIGN0eC5hcmMoeCwgeSwgc2l6ZSAvIDIsIDAsIDIgKiBNYXRoLlBJKTtcbiAgICAgIGN0eC5maWxsU3R5bGUgPSBjb2xvcmQoJyNmOGZhZmMnKS5hbHBoYShicmlnaHRuZXNzICogaW5pdGlhbEZhZGVQZXJjZW50KS50b1JnYlN0cmluZygpO1xuICAgICAgY3R4LmZpbGwoKTtcbiAgICB9XG4gIFxuICAgIGN0eC5yZXN0b3JlKCk7XG4gIH1cblxuICBwcml2YXRlIHBhaW50U2hvb3RpbmdTdGFycyhjdHg6IENhbnZhc1JlbmRlcmluZ0NvbnRleHQyRCwgdGltZTogRE9NSGlnaFJlc1RpbWVTdGFtcCkge1xuICAgIGN0eC5zYXZlKCk7XG4gIFxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5zaG9vdGluZ1N0YXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIHN0YXJ0WCwgXG4gICAgICAgIHN0YXJ0WSwgXG4gICAgICAgIHNpemUsIFxuICAgICAgICB2ZWxvY2l0eSwgXG4gICAgICAgIGxpZmUsIFxuICAgICAgICBzdGFydCwgXG4gICAgICAgIGFuZ2xlXG4gICAgICB9ID0gdGhpcy5zaG9vdGluZ1N0YXJzW2ldO1xuXG4gICAgICBjb25zdCB4ID0gc3RhcnRYICsgTWF0aC5zaW4oYW5nbGUpICogdmVsb2NpdHkgKiAoKHRpbWUgLSBzdGFydCkgLyAxMDAwKTtcbiAgICAgIGNvbnN0IHkgPSBzdGFydFkgKyBNYXRoLmNvcyhhbmdsZSkgKiB2ZWxvY2l0eSAqICgodGltZSAtIHN0YXJ0KSAvIDEwMDApO1xuICAgICAgXG4gICAgICBjb25zdCBzZWNvbmRzU2luY2VTdGFydCA9ICh0aW1lIC0gc3RhcnQpIC8gMTAwMDtcbiAgICAgIGNvbnN0IHBlcmNlbnREb25lID0gKHNlY29uZHNTaW5jZVN0YXJ0IC8gbGlmZSk7XG4gICAgICBjb25zdCBicmlnaHRuZXNzID0gc2Vjb25kc1NpbmNlU3RhcnQgPiBsaWZlID8gMCA6ICgoTWF0aC5zaW4ocGVyY2VudERvbmUgKiBNYXRoLlBJKSkpO1xuICBcbiAgICAgIGN0eC5iZWdpblBhdGgoKTtcbiAgICAgIGN0eC5hcmMoeCwgeSwgc2l6ZSAvIDIsIDAsIDIgKiBNYXRoLlBJKTtcbiAgICAgIGN0eC5maWxsU3R5bGUgPSBjb2xvcmQoJyNmOGZhZmMnKS5hbHBoYShicmlnaHRuZXNzKS50b1JnYlN0cmluZygpO1xuICAgICAgY3R4LmZpbGwoKTtcbiAgICB9XG4gIFxuICAgIGN0eC5yZXN0b3JlKCk7XG4gIH1cblxuICBwdWJsaWMgc2V0TW91c2VQb3NpdGlvbih4OiBudW1iZXIsIHk6IG51bWJlcikge1xuICAgIHRoaXMubW91c2VYID0geDtcbiAgICB0aGlzLm1vdXNlWSA9IHk7XG4gICAgY29uc29sZS5sb2coXCJISVwiKVxuICB9XG5cbiAgcHVibGljIHN1YnNjcmliZSgpIHtcbiAgICB0aGlzLnN1YnNjcmliZWQgPSB0cnVlO1xuICAgIHRoaXMuY2FsbGJhY2sgPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5wYWludEZyYW1lKTtcbiAgfVxuXG4gIHB1YmxpYyB1bnN1YnNjcmliZSgpIHtcbiAgICB0aGlzLnN1YnNjcmliZWQgPSBmYWxzZTtcbiAgICBpZiAodGhpcy5jYWxsYmFjayl7XG4gICAgICBjYW5jZWxBbmltYXRpb25GcmFtZSh0aGlzLmNhbGxiYWNrKTtcbiAgICB9XG4gIH1cbn0iXSwibmFtZXMiOlsiY29sb3JkIiwidXNlQ2FsbGJhY2siLCJ1c2VFZmZlY3QiLCJ1c2VSZWYiLCJDYW52YXNCYWNrZ3JvdW5kIiwiY2FudmFzUmVmIiwiaG9sZGVyUmVmIiwiYW5pbWF0b3IiLCJyZXNpemVIYW5kbGVyIiwiY3VycmVudCIsInBpeGVsUmF0aW8iLCJ3aW5kb3ciLCJkZXZpY2VQaXhlbFJhdGlvIiwid2lkdGgiLCJjbGllbnRXaWR0aCIsImhlaWdodCIsImNsaWVudEhlaWdodCIsInN0eWxlIiwidW5zdWJzY3JpYmUiLCJuZXdBbmltYXRvciIsIkFuaW1hdG9yIiwic3Vic2NyaWJlIiwibW91c2VNb3ZlSGFuZGxlciIsImV2Iiwic2V0TW91c2VQb3NpdGlvbiIsImNsaWVudFgiLCJjbGllbnRZIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJkaXYiLCJyZWYiLCJwb3NpdGlvbiIsInRvcCIsImxlZnQiLCJyaWdodCIsImJvdHRvbSIsImRpc3BsYXkiLCJjYW52YXMiLCJQRVJDRU5UX1NUQVJTIiwiU0hPT1RJTkdfU1RBUlNfUEVSX1NFQ09ORCIsIlNUQVJfQ09MT1JTIiwiQkFDS0dST1VORF9GQURFIiwicGFpbnRGcmFtZSIsInRpbWUiLCJjb250ZXh0IiwiZ2V0Q29udGV4dCIsImNvbXB1dGVTaG9vdGluZ1N0YXJzIiwicmVzZXQiLCJzY2FsZSIsInBhaW50U2t5IiwicGFpbnRTdGFycyIsInBhaW50U2hvb3RpbmdTdGFycyIsInJlc2V0VHJhbnNmb3JtIiwibGFzdEZyYW1lIiwic3Vic2NyaWJlZCIsImNhbGxiYWNrIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiY29sb3IiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJsZW5ndGgiLCJzaG9vdGluZ1N0YXJzIiwiZmlsdGVyIiwic3RhciIsInN0YXJ0IiwibGlmZSIsInRpbWVTaW5jZUxhc3RGcmFtZSIsInNob3VsZEFkZFN0YXIiLCJzdGFydFgiLCJzdGFydFkiLCJzaXplIiwiYW5nbGUiLCJQSSIsInZlbG9jaXR5IiwicHVzaCIsImN0eCIsInNhdmUiLCJzZWNvbmRzU2luY2VTdGFydCIsIm9wYWNpdHkiLCJtYXgiLCJncmFkaWVudCIsImNyZWF0ZUxpbmVhckdyYWRpZW50IiwiYWRkQ29sb3JTdG9wIiwiYWxwaGEiLCJ0b1JnYlN0cmluZyIsInJlY3QiLCJmaWxsU3R5bGUiLCJmaWxsIiwicmVzdG9yZSIsImkiLCJzdGFycyIsIngiLCJ5IiwiZGlzdGFuY2UiLCJicmlnaHRuZXNzIiwibWluIiwiYnJpZ2h0bmVzc01pbiIsImJyaWdodG5lc3NNYXgiLCJwZXJpb2QiLCJicmlnaHRuZXNzUGVyaW9kIiwib2Zmc2V0IiwiYnJpZ2h0bmVzc09mZnNldCIsImluaXRpYWxGYWRlIiwiZHVyYXRpb24iLCJpbml0aWFsRmFkZUR1cmF0aW9uIiwiaW5pdGlhbEZhZGVPZmZzZXQiLCJpbml0aWFsRmFkZVBlcmNlbnQiLCJwZXJjZW50RG9uZSIsInNpbiIsImNlbnRlclgiLCJjZW50ZXJZIiwieFdpdGhQYXJhbGxheCIsIm1vdXNlWCIsInlXaXRoUGFyYWxsYXgiLCJtb3VzZVkiLCJiZWdpblBhdGgiLCJhcmMiLCJjb3MiLCJjb25zb2xlIiwibG9nIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJjb25zdHJ1Y3RvciIsIm51bWJlck9mU3RhcnMiLCJicmlnaHRuZXNzMSIsImJyaWdodG5lc3MyIiwiZG9jdW1lbnQiLCJ0aW1lbGluZSIsImN1cnJlbnRUaW1lIiwiYmluZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/canvas.tsx\n"));

/***/ })

});